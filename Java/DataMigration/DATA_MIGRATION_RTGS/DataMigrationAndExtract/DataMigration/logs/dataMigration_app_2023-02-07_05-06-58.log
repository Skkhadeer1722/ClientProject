2023-02-07 17:06:58.633 [main] INFO  scrips.datamigration.App:55 - Starting App on WSIN181 with PID 6888 (D:\DataMigration\DATA_MIGRATION_RTGS\DataMigrationAndExtract\DataMigration\target\classes started by SheikKhadeer in D:\DataMigration\DATA_MIGRATION_RTGS\DataMigrationAndExtract\DataMigration)
2023-02-07 17:06:58.643 [main] INFO  scrips.datamigration.App:651 - No active profile set, falling back to default profiles: app
2023-02-07 17:06:59.724 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate:127 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-07 17:07:00.289 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate:187 - Finished Spring Data repository scanning in 555ms. Found 60 JPA repository interfaces.
2023-02-07 17:07:00.688 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.EnableEncryptablePropertiesBeanFactoryPostProcessor:39 - Post-processing PropertySource instances
2023-02-07 17:07:00.713 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-02-07 17:07:00.714 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-02-07 17:07:00.714 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-02-07 17:07:00.715 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-02-07 17:07:00.715 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-02-07 17:07:00.715 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource applicationConfig: [file:./config/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-02-07 17:07:00.716 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-02-07 17:07:00.716 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource DataMigrationProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-02-07 17:07:00.814 [main] INFO  com.ulisesbocchio.jasyptspringboot.filter.DefaultLazyPropertyFilter:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-02-07 17:07:00.902 [main] INFO  com.ulisesbocchio.jasyptspringboot.resolver.DefaultLazyPropertyResolver:35 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-02-07 17:07:00.906 [main] INFO  com.ulisesbocchio.jasyptspringboot.detector.DefaultLazyPropertyDetector:35 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-02-07 17:07:00.913 [main] INFO  com.ulisesbocchio.jasyptspringboot.encryptor.DefaultLazyEncryptor:37 - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2023-02-07 17:07:00.947 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2023-02-07 17:07:00.948 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2023-02-07 17:07:00.949 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2023-02-07 17:07:00.950 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2023-02-07 17:07:00.950 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2023-02-07 17:07:00.953 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2023-02-07 17:07:01.137 [main] INFO  org.hibernate.jpa.internal.util.LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: data]
2023-02-07 17:07:01.196 [main] INFO  org.hibernate.Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2023-02-07 17:07:01.331 [main] INFO  org.hibernate.annotations.common.Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2023-02-07 17:07:01.787 [main] INFO  com.zaxxer.hikari.HikariDataSource:110 - HikariPool-1 - Starting...
2023-02-07 17:07:01.946 [main] INFO  com.zaxxer.hikari.HikariDataSource:123 - HikariPool-1 - Start completed.
2023-02-07 17:07:01.977 [main] INFO  org.hibernate.dialect.Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-02-07 17:07:02.070 [main] INFO  org.hibernate.envers.boot.internal.EnversServiceImpl:90 - Envers integration enabled? : true
2023-02-07 17:07:03.921 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-07 17:07:03.930 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean:416 - Initialized JPA EntityManagerFactory for persistence unit 'data'
2023-02-07 17:07:05.079 [main] ERROR org.hibernate.hql.internal.ast.ErrorTracker:62 -  Unable to locate appropriate constructor on class [scrips.datamigration.reports.dto.JpaSssTransactionDto]. Expected arguments are: java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String
[cause=org.hibernate.PropertyNotFoundException: no appropriate constructor in class: scrips.datamigration.reports.dto.JpaSssTransactionDto]
2023-02-07 17:07:05.081 [main] ERROR org.hibernate.hql.internal.ast.ErrorTracker:57 -  Unable to locate appropriate constructor on class [scrips.datamigration.reports.dto.JpaSssTransactionDto]. Expected arguments are: java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String
[cause=org.hibernate.PropertyNotFoundException: no appropriate constructor in class: scrips.datamigration.reports.dto.JpaSssTransactionDto]
org.hibernate.hql.internal.ast.DetailedSemanticException: Unable to locate appropriate constructor on class [scrips.datamigration.reports.dto.JpaSssTransactionDto]. Expected arguments are: java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String
	at org.hibernate.hql.internal.ast.tree.ConstructorNode.resolveConstructor(ConstructorNode.java:182) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.tree.ConstructorNode.prepare(ConstructorNode.java:144) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.HqlSqlWalker.processConstructor(HqlSqlWalker.java:1258) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectExpr(HqlSqlBaseWalker.java:2390) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectExprList(HqlSqlBaseWalker.java:2256) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectClause(HqlSqlBaseWalker.java:1518) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:325) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:273) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:272) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:155) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:604) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:716) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:113) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:366) ~[spring-orm-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.sun.proxy.$Proxy89.createQuery(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:99) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:92) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:331) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:212) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.get(Lazy.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1306) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) [spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:895) [spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) [spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at scrips.datamigration.App.main(App.java:26) [classes/:?]
2023-02-07 17:07:05.097 [main] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext:558 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'generateReportService': Unsatisfied dependency expressed through field 'sssTransactionDAO'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sssTransactionDAO' defined in scrips.datamigration.sss.repository.SssTransactionDAO defined in @EnableJpaRepositories declared on MySqlConfig: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List scrips.datamigration.sss.repository.SssTransactionDAO.getReportData()!
2023-02-07 17:07:05.100 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean:598 - Closing JPA EntityManagerFactory for persistence unit 'data'
2023-02-07 17:07:05.101 [main] INFO  com.zaxxer.hikari.HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2023-02-07 17:07:05.115 [main] INFO  com.zaxxer.hikari.HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2023-02-07 17:07:05.122 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-02-07 17:07:05.123 [main] ERROR org.springframework.boot.SpringApplication:837 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'generateReportService': Unsatisfied dependency expressed through field 'sssTransactionDAO'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sssTransactionDAO' defined in scrips.datamigration.sss.repository.SssTransactionDAO defined in @EnableJpaRepositories declared on MySqlConfig: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List scrips.datamigration.sss.repository.SssTransactionDAO.getReportData()!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:895) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at scrips.datamigration.App.main(App.java:26) [classes/:?]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sssTransactionDAO' defined in scrips.datamigration.sss.repository.SssTransactionDAO defined in @EnableJpaRepositories declared on MySqlConfig: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List scrips.datamigration.sss.repository.SssTransactionDAO.getReportData()!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1306) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 17 more
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List scrips.datamigration.sss.repository.SssTransactionDAO.getReportData()!
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:93) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:99) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:92) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:331) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:212) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.get(Lazy.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1306) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 17 more
Caused by: java.lang.IllegalArgumentException: org.hibernate.hql.internal.ast.QuerySyntaxException: Unable to locate appropriate constructor on class [scrips.datamigration.reports.dto.JpaSssTransactionDto]. Expected arguments are: java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String [select new scrips.datamigration.reports.dto.JpaSssTransactionDto( case when x.sssReference is null then '' else x.sssReference end AS x_securities_code,
 case when y.sssReference is null then '' else y.sssReference end AS y_securities_code,
 case when z.sssReference is null then '' else  z.sssReference end AS z_securities_code,
 case when x.messageLogId is null then '' else x.messageLogId end AS x_issue_code,
 case when y.messageLogId is null then '' else y.messageLogId end AS y_issue_code,
 case when z.messageLogId is null then '' else z.messageLogId end AS z_issue_code,
 case when x.securitiesCode is null then '' else x.securitiesCode end AS x_securitiesCode,
 case when y.securitiesCode is null then '' else y.securitiesCode end AS y_securitiesCode,
 case when z.securitiesCode is null then '' else z.securitiesCode end AS z_securitiesCode,
 case when x.transactionType is null then '' else x.transactionType end AS x_securities_type_id,
 case when y.transactionType is null then '' else y.transactionType end AS y_securities_type_id,
 case when z.transactionType is null then '' else z.transactionType end AS z_securities_type_id,
 case when x.status is null then '' else x.status end AS x_securities_status,
 case when y.status is null then '' else y.status end AS y_securities_status,
 case when z.status is null then '' else z.status end AS z_securities_status,
 case when x.settlementDate is null then '' else x.settlementDate end AS x_securities_tenor_period_unit,
 case when y.settlementDate is null then '' else y.settlementDate end AS y_securities_tenor_period_unit,
 case when z.settlementDate is null then '' else z.settlementDate end AS z_securities_tenor_period_unit,
 case when x.tradeDate is null then '' else x.tradeDate end AS x_tradeDate,
 case when y.tradeDate is null then '' else y.tradeDate end AS x_tradeDate,
 case when z.tradeDate is null then '' else z.tradeDate end AS x_tradeDate,
 case when x.currencyCode is null then '' else x.currencyCode end AS x_currency_code,
 case when y.currencyCode is null then '' else y.currencyCode end AS y_currency_code,
 case when z.currencyCode is null then '' else z.currencyCode end AS z_currency_code,
 case when x.settlementAmount is null then '' else x.settlementAmount end AS x_issuer_id,
 case when y.settlementAmount is null then '' else y.settlementAmount end AS y_issuer_id,
 case when z.settlementAmount is null then '' else z.settlementAmount end AS z_issuer_id,
 case when x.nominalAmount is null then '' else x.nominalAmount end AS x_nominalAmount,
 case when y.nominalAmount is null then '' else y.nominalAmount end AS y_nominalAmount,
 case when z.nominalAmount is null then '' else z.nominalAmount end AS z_nominalAmount,
 case when x.dealPrice is null then '' else x.dealPrice end AS x_facility_eligibility_id,
 case when y.dealPrice is null then '' else y.dealPrice end AS y_facility_eligibility_id,
 case when z.dealPrice is null then '' else z.dealPrice end AS z_facility_eligibility_id,
 case when x.delivererMemberId is null then '' else x.delivererMemberId end AS x_workflow_status_id,
 case when y.delivererMemberId is null then '' else y.delivererMemberId end AS y_workflow_status_id,
 case when z.delivererMemberId is null then '' else z.delivererMemberId end AS z_workflow_status_id,
  case when x.delivererAccountId is null then '' else x.delivererAccountId end AS x_redemption_reimburse,
 case when y.delivererAccountId is null then '' else y.delivererAccountId end AS y_redemption_reimburse,
 case when z.delivererAccountId is null then '' else z.delivererAccountId end AS z_redemption_reimburse,
 case when x.receiverMemberId is null then '' else x.receiverMemberId end AS x_tenor_period,
 case when y.receiverMemberId is null then '' else y.receiverMemberId end AS y_tenor_period,
 case when z.receiverMemberId is null then '' else z.receiverMemberId end AS z_tenor_period,
  case when x.receiverAccountId is null then '' else x.receiverAccountId end AS x_issue_price,
 case when y.receiverAccountId is null then '' else y.receiverAccountId end AS y_issue_price,
 case when z.receiverAccountId is null then '' else z.receiverAccountId end AS z_issue_price,
 case when x.repoClosingDate is null then '' else x.repoClosingDate end AS x_first_auction_date,
 case when y.repoClosingDate is null then '' else y.repoClosingDate end AS y_first_auction_date,
 case when z.repoClosingDate is null then '' else z.repoClosingDate end AS z_first_auction_date,
 case when x.repoClosingSettlementAmount is null then '' else x.repoClosingSettlementAmount end AS x_first_issuance_date,
 case when y.repoClosingSettlementAmount is null then '' else y.repoClosingSettlementAmount end AS y_first_issuance_date,
 case when z.repoClosingSettlementAmount is null then '' else z.repoClosingSettlementAmount end AS z_first_issuance_date,
 case when x.reasonCode is null then '' else x.reasonCode end AS x_first_issuance_amount,
 case when y.reasonCode is null then '' else y.reasonCode end AS y_first_issuance_amount,
 case when z.reasonCode is null then '' else z.reasonCode end AS z_first_issuance_amount,
 case when x.processedDate is null then '' else x.processedDate end AS x_optional_redemption_date,
 case when y.processedDate is null then '' else y.processedDate end AS y_optional_redemption_date,
 case when z.processedDate is null then '' else z.processedDate end AS z_optional_redemption_date,
 case when x.createdDate is null then '' else x.createdDate end AS x_created_date,
 case when y.createdDate is null then '' else y.createdDate end AS y_created_date,
 case when z.createdDate is null then '' else z.createdDate end AS z_created_date,
 case when x.modifiedDate is null then '' else x.modifiedDate end AS x_effective_date,
 case when y.modifiedDate is null then '' else y.modifiedDate end AS y_effective_date,
 case when z.modifiedDate is null then '' else z.modifiedDate end AS z_effective_date,
 case when x.transactionReference is null then '' else x.transactionReference end AS x_redemption_date,
 case when y.transactionReference is null then '' else y.transactionReference end AS y_redemption_date,
 case when z.transactionReference is null then '' else z.transactionReference end AS z_redemption_date,
 case when x.senderMemberSwiftCode is null then '' else x.senderMemberSwiftCode end AS x_redemption_price,
 case when y.senderMemberSwiftCode is null then '' else y.senderMemberSwiftCode end AS y_redemption_price,
 case when z.senderMemberSwiftCode is null then '' else z.senderMemberSwiftCode end AS z_redemption_price,
 case when x.receiverMemberSwiftCode is null then '' else x.receiverMemberSwiftCode end AS x_coupon_structure,
 case when y.receiverMemberSwiftCode is null then '' else y.receiverMemberSwiftCode end AS y_coupon_structure,
 case when z.receiverMemberSwiftCode is null then '' else z.receiverMemberSwiftCode end AS z_coupon_structure,
 case when x.senderMemberCode is null then '' else x.senderMemberCode end AS x_coupon_payment_frequency,
 case when y.senderMemberCode is null then '' else y.senderMemberCode end AS y_coupon_payment_frequency,
 case when z.senderMemberCode is null then '' else z.senderMemberCode end AS z_coupon_payment_frequency,
 case when x.senderType is null then '' else x.senderType end AS x_coupon_rate,
 case when y.senderType is null then '' else y.senderType end AS y_coupon_rate,
 case when z.senderType is null then '' else z.senderType end AS z_coupon_rate,
 case when x.senderMemberId is null then '' else x.senderMemberId end AS x_tax_scheme_id,
 case when y.senderMemberId is null then '' else y.senderMemberId end AS y_tax_scheme_id,
 case when z.senderMemberId is null then '' else z.senderMemberId end AS z_tax_scheme_id,
  case when x.accuredInterestAmount is null then '' else x.accuredInterestAmount end AS x_first_coupon_date,
 case when y.accuredInterestAmount is null then '' else y.accuredInterestAmount end AS y_first_coupon_date,
 case when z.accuredInterestAmount is null then '' else z.accuredInterestAmount end AS z_first_coupon_date,
 case when x.payerMemberSwiftCode is null then '' else x.payerMemberSwiftCode end AS x_optional_redemption_price,
 case when y.payerMemberSwiftCode is null then '' else y.payerMemberSwiftCode end AS y_optional_redemption_price,
 case when z.payerMemberSwiftCode is null then '' else z.payerMemberSwiftCode end AS z_optional_redemption_price,
 case when x.payeeMemberSwiftCode is null then '' else x.payeeMemberSwiftCode end AS x_central_bank_applied_amount,
 case when y.payeeMemberSwiftCode is null then '' else y.payeeMemberSwiftCode end AS y_central_bank_applied_amount,
 case when z.payeeMemberSwiftCode is null then '' else z.payeeMemberSwiftCode end AS z_central_bank_applied_amount,
 case when x.delivererRtgsAccount is null then '' else x.delivererRtgsAccount end AS x_rounding_option,
 case when y.delivererRtgsAccount is null then '' else y.delivererRtgsAccount end AS y_rounding_option,
 case when z.delivererRtgsAccount is null then '' else z.delivererRtgsAccount end AS z_rounding_option,
 case when x.receiverRtgsAccount is null then '' else x.receiverRtgsAccount end AS x_day_count_convention,
 case when y.receiverRtgsAccount is null then '' else y.receiverRtgsAccount end AS y_day_count_convention,
 case when z.receiverRtgsAccount is null then '' else z.receiverRtgsAccount end AS z_day_count_convention,
 case when x.gridLockIndicator is null then '' else x.gridLockIndicator end AS x_approved_by,
 case when y.gridLockIndicator is null then '' else y.gridLockIndicator end AS y_approved_by,
 case when z.gridLockIndicator is null then '' else z.gridLockIndicator end AS z_approved_by,
 case when x.rolloverCount is null then '' else x.rolloverCount end AS x_approved_date,
 case when y.rolloverCount is null then '' else y.rolloverCount end AS y_approved_date,
 case when z.rolloverCount is null then '' else z.rolloverCount end AS z_approved_date,
  case when x.pendingCancellationIndicator is null then '' else x.pendingCancellationIndicator end AS x_approval_remark,
 case when y.pendingCancellationIndicator is null then '' else y.pendingCancellationIndicator end AS y_approval_remark,
 case when z.pendingCancellationIndicator is null then '' else z.pendingCancellationIndicator end AS z_approval_remark,
 case when x.delivererRtgsMemberCode is null then '' else x.delivererRtgsMemberCode end AS x_status,
 case when y.delivererRtgsMemberCode is null then '' else y.delivererRtgsMemberCode end AS y_status,
 case when z.delivererRtgsMemberCode is null then '' else z.delivererRtgsMemberCode end AS z_status,
  case when x.receiverRtgsMemberCode is null then '' else x.receiverRtgsMemberCode end AS x_record_date_period,
 case when y.receiverRtgsMemberCode is null then '' else y.receiverRtgsMemberCode end AS y_record_date_period,
 case when z.receiverRtgsMemberCode is null then '' else z.receiverRtgsMemberCode end AS z_record_date_period,
 case when x.paymentType is null then '' else x.paymentType end AS x_modified_date,
 case when y.paymentType is null then '' else y.paymentType end AS y_modified_date,
 case when z.paymentType is null then '' else z.paymentType end AS z_modified_date,
 case when z.remarks is null then case when y.remarks is null then '' else y.remarks end else z.remarks end AS y_remark)
FROM scrips.datamigration.sss.model.JpaSssTransactionSource z  left join
 scrips.datamigration.sss.model.JpaSssTransactionTemp y on z.id=y.id left join
 scrips.datamigration.sss.model.JpaSssTransaction x on y.sssReference=x.sssReference AND y.remarks is null 
ORDER BY z.seq asc]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:138) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:725) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:113) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:366) ~[spring-orm-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.sun.proxy.$Proxy89.createQuery(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:99) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:92) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:331) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:212) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.get(Lazy.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1306) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 17 more
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: Unable to locate appropriate constructor on class [scrips.datamigration.reports.dto.JpaSssTransactionDto]. Expected arguments are: java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String [select new scrips.datamigration.reports.dto.JpaSssTransactionDto( case when x.sssReference is null then '' else x.sssReference end AS x_securities_code,
 case when y.sssReference is null then '' else y.sssReference end AS y_securities_code,
 case when z.sssReference is null then '' else  z.sssReference end AS z_securities_code,
 case when x.messageLogId is null then '' else x.messageLogId end AS x_issue_code,
 case when y.messageLogId is null then '' else y.messageLogId end AS y_issue_code,
 case when z.messageLogId is null then '' else z.messageLogId end AS z_issue_code,
 case when x.securitiesCode is null then '' else x.securitiesCode end AS x_securitiesCode,
 case when y.securitiesCode is null then '' else y.securitiesCode end AS y_securitiesCode,
 case when z.securitiesCode is null then '' else z.securitiesCode end AS z_securitiesCode,
 case when x.transactionType is null then '' else x.transactionType end AS x_securities_type_id,
 case when y.transactionType is null then '' else y.transactionType end AS y_securities_type_id,
 case when z.transactionType is null then '' else z.transactionType end AS z_securities_type_id,
 case when x.status is null then '' else x.status end AS x_securities_status,
 case when y.status is null then '' else y.status end AS y_securities_status,
 case when z.status is null then '' else z.status end AS z_securities_status,
 case when x.settlementDate is null then '' else x.settlementDate end AS x_securities_tenor_period_unit,
 case when y.settlementDate is null then '' else y.settlementDate end AS y_securities_tenor_period_unit,
 case when z.settlementDate is null then '' else z.settlementDate end AS z_securities_tenor_period_unit,
 case when x.tradeDate is null then '' else x.tradeDate end AS x_tradeDate,
 case when y.tradeDate is null then '' else y.tradeDate end AS x_tradeDate,
 case when z.tradeDate is null then '' else z.tradeDate end AS x_tradeDate,
 case when x.currencyCode is null then '' else x.currencyCode end AS x_currency_code,
 case when y.currencyCode is null then '' else y.currencyCode end AS y_currency_code,
 case when z.currencyCode is null then '' else z.currencyCode end AS z_currency_code,
 case when x.settlementAmount is null then '' else x.settlementAmount end AS x_issuer_id,
 case when y.settlementAmount is null then '' else y.settlementAmount end AS y_issuer_id,
 case when z.settlementAmount is null then '' else z.settlementAmount end AS z_issuer_id,
 case when x.nominalAmount is null then '' else x.nominalAmount end AS x_nominalAmount,
 case when y.nominalAmount is null then '' else y.nominalAmount end AS y_nominalAmount,
 case when z.nominalAmount is null then '' else z.nominalAmount end AS z_nominalAmount,
 case when x.dealPrice is null then '' else x.dealPrice end AS x_facility_eligibility_id,
 case when y.dealPrice is null then '' else y.dealPrice end AS y_facility_eligibility_id,
 case when z.dealPrice is null then '' else z.dealPrice end AS z_facility_eligibility_id,
 case when x.delivererMemberId is null then '' else x.delivererMemberId end AS x_workflow_status_id,
 case when y.delivererMemberId is null then '' else y.delivererMemberId end AS y_workflow_status_id,
 case when z.delivererMemberId is null then '' else z.delivererMemberId end AS z_workflow_status_id,
  case when x.delivererAccountId is null then '' else x.delivererAccountId end AS x_redemption_reimburse,
 case when y.delivererAccountId is null then '' else y.delivererAccountId end AS y_redemption_reimburse,
 case when z.delivererAccountId is null then '' else z.delivererAccountId end AS z_redemption_reimburse,
 case when x.receiverMemberId is null then '' else x.receiverMemberId end AS x_tenor_period,
 case when y.receiverMemberId is null then '' else y.receiverMemberId end AS y_tenor_period,
 case when z.receiverMemberId is null then '' else z.receiverMemberId end AS z_tenor_period,
  case when x.receiverAccountId is null then '' else x.receiverAccountId end AS x_issue_price,
 case when y.receiverAccountId is null then '' else y.receiverAccountId end AS y_issue_price,
 case when z.receiverAccountId is null then '' else z.receiverAccountId end AS z_issue_price,
 case when x.repoClosingDate is null then '' else x.repoClosingDate end AS x_first_auction_date,
 case when y.repoClosingDate is null then '' else y.repoClosingDate end AS y_first_auction_date,
 case when z.repoClosingDate is null then '' else z.repoClosingDate end AS z_first_auction_date,
 case when x.repoClosingSettlementAmount is null then '' else x.repoClosingSettlementAmount end AS x_first_issuance_date,
 case when y.repoClosingSettlementAmount is null then '' else y.repoClosingSettlementAmount end AS y_first_issuance_date,
 case when z.repoClosingSettlementAmount is null then '' else z.repoClosingSettlementAmount end AS z_first_issuance_date,
 case when x.reasonCode is null then '' else x.reasonCode end AS x_first_issuance_amount,
 case when y.reasonCode is null then '' else y.reasonCode end AS y_first_issuance_amount,
 case when z.reasonCode is null then '' else z.reasonCode end AS z_first_issuance_amount,
 case when x.processedDate is null then '' else x.processedDate end AS x_optional_redemption_date,
 case when y.processedDate is null then '' else y.processedDate end AS y_optional_redemption_date,
 case when z.processedDate is null then '' else z.processedDate end AS z_optional_redemption_date,
 case when x.createdDate is null then '' else x.createdDate end AS x_created_date,
 case when y.createdDate is null then '' else y.createdDate end AS y_created_date,
 case when z.createdDate is null then '' else z.createdDate end AS z_created_date,
 case when x.modifiedDate is null then '' else x.modifiedDate end AS x_effective_date,
 case when y.modifiedDate is null then '' else y.modifiedDate end AS y_effective_date,
 case when z.modifiedDate is null then '' else z.modifiedDate end AS z_effective_date,
 case when x.transactionReference is null then '' else x.transactionReference end AS x_redemption_date,
 case when y.transactionReference is null then '' else y.transactionReference end AS y_redemption_date,
 case when z.transactionReference is null then '' else z.transactionReference end AS z_redemption_date,
 case when x.senderMemberSwiftCode is null then '' else x.senderMemberSwiftCode end AS x_redemption_price,
 case when y.senderMemberSwiftCode is null then '' else y.senderMemberSwiftCode end AS y_redemption_price,
 case when z.senderMemberSwiftCode is null then '' else z.senderMemberSwiftCode end AS z_redemption_price,
 case when x.receiverMemberSwiftCode is null then '' else x.receiverMemberSwiftCode end AS x_coupon_structure,
 case when y.receiverMemberSwiftCode is null then '' else y.receiverMemberSwiftCode end AS y_coupon_structure,
 case when z.receiverMemberSwiftCode is null then '' else z.receiverMemberSwiftCode end AS z_coupon_structure,
 case when x.senderMemberCode is null then '' else x.senderMemberCode end AS x_coupon_payment_frequency,
 case when y.senderMemberCode is null then '' else y.senderMemberCode end AS y_coupon_payment_frequency,
 case when z.senderMemberCode is null then '' else z.senderMemberCode end AS z_coupon_payment_frequency,
 case when x.senderType is null then '' else x.senderType end AS x_coupon_rate,
 case when y.senderType is null then '' else y.senderType end AS y_coupon_rate,
 case when z.senderType is null then '' else z.senderType end AS z_coupon_rate,
 case when x.senderMemberId is null then '' else x.senderMemberId end AS x_tax_scheme_id,
 case when y.senderMemberId is null then '' else y.senderMemberId end AS y_tax_scheme_id,
 case when z.senderMemberId is null then '' else z.senderMemberId end AS z_tax_scheme_id,
  case when x.accuredInterestAmount is null then '' else x.accuredInterestAmount end AS x_first_coupon_date,
 case when y.accuredInterestAmount is null then '' else y.accuredInterestAmount end AS y_first_coupon_date,
 case when z.accuredInterestAmount is null then '' else z.accuredInterestAmount end AS z_first_coupon_date,
 case when x.payerMemberSwiftCode is null then '' else x.payerMemberSwiftCode end AS x_optional_redemption_price,
 case when y.payerMemberSwiftCode is null then '' else y.payerMemberSwiftCode end AS y_optional_redemption_price,
 case when z.payerMemberSwiftCode is null then '' else z.payerMemberSwiftCode end AS z_optional_redemption_price,
 case when x.payeeMemberSwiftCode is null then '' else x.payeeMemberSwiftCode end AS x_central_bank_applied_amount,
 case when y.payeeMemberSwiftCode is null then '' else y.payeeMemberSwiftCode end AS y_central_bank_applied_amount,
 case when z.payeeMemberSwiftCode is null then '' else z.payeeMemberSwiftCode end AS z_central_bank_applied_amount,
 case when x.delivererRtgsAccount is null then '' else x.delivererRtgsAccount end AS x_rounding_option,
 case when y.delivererRtgsAccount is null then '' else y.delivererRtgsAccount end AS y_rounding_option,
 case when z.delivererRtgsAccount is null then '' else z.delivererRtgsAccount end AS z_rounding_option,
 case when x.receiverRtgsAccount is null then '' else x.receiverRtgsAccount end AS x_day_count_convention,
 case when y.receiverRtgsAccount is null then '' else y.receiverRtgsAccount end AS y_day_count_convention,
 case when z.receiverRtgsAccount is null then '' else z.receiverRtgsAccount end AS z_day_count_convention,
 case when x.gridLockIndicator is null then '' else x.gridLockIndicator end AS x_approved_by,
 case when y.gridLockIndicator is null then '' else y.gridLockIndicator end AS y_approved_by,
 case when z.gridLockIndicator is null then '' else z.gridLockIndicator end AS z_approved_by,
 case when x.rolloverCount is null then '' else x.rolloverCount end AS x_approved_date,
 case when y.rolloverCount is null then '' else y.rolloverCount end AS y_approved_date,
 case when z.rolloverCount is null then '' else z.rolloverCount end AS z_approved_date,
  case when x.pendingCancellationIndicator is null then '' else x.pendingCancellationIndicator end AS x_approval_remark,
 case when y.pendingCancellationIndicator is null then '' else y.pendingCancellationIndicator end AS y_approval_remark,
 case when z.pendingCancellationIndicator is null then '' else z.pendingCancellationIndicator end AS z_approval_remark,
 case when x.delivererRtgsMemberCode is null then '' else x.delivererRtgsMemberCode end AS x_status,
 case when y.delivererRtgsMemberCode is null then '' else y.delivererRtgsMemberCode end AS y_status,
 case when z.delivererRtgsMemberCode is null then '' else z.delivererRtgsMemberCode end AS z_status,
  case when x.receiverRtgsMemberCode is null then '' else x.receiverRtgsMemberCode end AS x_record_date_period,
 case when y.receiverRtgsMemberCode is null then '' else y.receiverRtgsMemberCode end AS y_record_date_period,
 case when z.receiverRtgsMemberCode is null then '' else z.receiverRtgsMemberCode end AS z_record_date_period,
 case when x.paymentType is null then '' else x.paymentType end AS x_modified_date,
 case when y.paymentType is null then '' else y.paymentType end AS y_modified_date,
 case when z.paymentType is null then '' else z.paymentType end AS z_modified_date,
 case when z.remarks is null then case when y.remarks is null then '' else y.remarks end else z.remarks end AS y_remark)
FROM scrips.datamigration.sss.model.JpaSssTransactionSource z  left join
 scrips.datamigration.sss.model.JpaSssTransactionTemp y on z.id=y.id left join
 scrips.datamigration.sss.model.JpaSssTransaction x on y.sssReference=x.sssReference AND y.remarks is null 
ORDER BY z.seq asc]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:74) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.ErrorTracker.throwQueryException(ErrorTracker.java:93) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:278) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:155) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:604) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:716) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:113) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:366) ~[spring-orm-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.sun.proxy.$Proxy89.createQuery(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:99) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:92) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:331) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:212) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.get(Lazy.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1306) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 17 more
