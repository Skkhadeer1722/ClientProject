2023-02-02 17:04:44.300 [main] INFO  scrips.datamigration.App:55 - Starting App on WSIN181 with PID 12064 (D:\DataMigration\DATA_MIGRATION_RTGS\DataMigrationAndExtract\DataMigration\target\classes started by SheikKhadeer in D:\DataMigration\DATA_MIGRATION_RTGS\DataMigrationAndExtract\DataMigration)
2023-02-02 17:04:44.306 [main] INFO  scrips.datamigration.App:651 - No active profile set, falling back to default profiles: app
2023-02-02 17:04:45.061 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate:127 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-02 17:04:45.510 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate:187 - Finished Spring Data repository scanning in 440ms. Found 60 JPA repository interfaces.
2023-02-02 17:04:45.797 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.EnableEncryptablePropertiesBeanFactoryPostProcessor:39 - Post-processing PropertySource instances
2023-02-02 17:04:45.820 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-02-02 17:04:45.821 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-02-02 17:04:45.821 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-02-02 17:04:45.821 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-02-02 17:04:45.822 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-02-02 17:04:45.822 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource applicationConfig: [file:./config/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-02-02 17:04:45.822 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-02-02 17:04:45.823 [main] INFO  com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter:56 - Converting PropertySource DataMigrationProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-02-02 17:04:45.918 [main] INFO  com.ulisesbocchio.jasyptspringboot.filter.DefaultLazyPropertyFilter:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-02-02 17:04:46.004 [main] INFO  com.ulisesbocchio.jasyptspringboot.resolver.DefaultLazyPropertyResolver:35 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-02-02 17:04:46.007 [main] INFO  com.ulisesbocchio.jasyptspringboot.detector.DefaultLazyPropertyDetector:35 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-02-02 17:04:46.014 [main] INFO  com.ulisesbocchio.jasyptspringboot.encryptor.DefaultLazyEncryptor:37 - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2023-02-02 17:04:46.046 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2023-02-02 17:04:46.046 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2023-02-02 17:04:46.047 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2023-02-02 17:04:46.047 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2023-02-02 17:04:46.048 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2023-02-02 17:04:46.050 [main] INFO  com.ulisesbocchio.jasyptspringboot.configuration.StringEncryptorBuilder:81 - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2023-02-02 17:04:46.228 [main] INFO  org.hibernate.jpa.internal.util.LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [name: data]
2023-02-02 17:04:46.286 [main] INFO  org.hibernate.Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2023-02-02 17:04:46.424 [main] INFO  org.hibernate.annotations.common.Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2023-02-02 17:04:46.930 [main] INFO  com.zaxxer.hikari.HikariDataSource:110 - HikariPool-1 - Starting...
2023-02-02 17:04:47.145 [main] INFO  com.zaxxer.hikari.HikariDataSource:123 - HikariPool-1 - Start completed.
2023-02-02 17:04:47.175 [main] INFO  org.hibernate.dialect.Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-02-02 17:04:47.249 [main] INFO  org.hibernate.envers.boot.internal.EnversServiceImpl:90 - Envers integration enabled? : true
2023-02-02 17:04:49.006 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-02 17:04:49.015 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean:416 - Initialized JPA EntityManagerFactory for persistence unit 'data'
2023-02-02 17:04:49.672 [main] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext:558 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'generateReportService': Unsatisfied dependency expressed through field 'jpaAccountPositionDAO'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaAccountPositionDAO' defined in scrips.datamigration.rtgs.repository.JpaAccountPositionDAO defined in @EnableJpaRepositories declared on MySqlConfig: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List scrips.datamigration.rtgs.repository.JpaAccountPositionDAO.getReportData()!
2023-02-02 17:04:49.674 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean:598 - Closing JPA EntityManagerFactory for persistence unit 'data'
2023-02-02 17:04:49.675 [main] INFO  com.zaxxer.hikari.HikariDataSource:350 - HikariPool-1 - Shutdown initiated...
2023-02-02 17:04:49.690 [main] INFO  com.zaxxer.hikari.HikariDataSource:352 - HikariPool-1 - Shutdown completed.
2023-02-02 17:04:49.698 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-02-02 17:04:49.700 [main] ERROR org.springframework.boot.SpringApplication:837 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'generateReportService': Unsatisfied dependency expressed through field 'jpaAccountPositionDAO'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaAccountPositionDAO' defined in scrips.datamigration.rtgs.repository.JpaAccountPositionDAO defined in @EnableJpaRepositories declared on MySqlConfig: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List scrips.datamigration.rtgs.repository.JpaAccountPositionDAO.getReportData()!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:895) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at scrips.datamigration.App.main(App.java:26) [classes/:?]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaAccountPositionDAO' defined in scrips.datamigration.rtgs.repository.JpaAccountPositionDAO defined in @EnableJpaRepositories declared on MySqlConfig: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List scrips.datamigration.rtgs.repository.JpaAccountPositionDAO.getReportData()!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1306) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 17 more
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List scrips.datamigration.rtgs.repository.JpaAccountPositionDAO.getReportData()!
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:93) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:99) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:92) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:331) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:212) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.get(Lazy.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1306) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 17 more
Caused by: java.lang.IllegalArgumentException: org.hibernate.QueryException: could not resolve property: accountId of: scrips.datamigration.rtgs.model.JpaAccount [select new scrips.datamigration.reports.dto.JpaAccountPositionReportDto( case when x.accountId is null then '' else x.accountId end AS x_account_id,
 case when y.accountId is null then '' else y.accountId end AS y_account_id,
 case when z.accountId is null then '' else  z.accountId end AS z_account_id,
 case when x.accountNumber is null then '' else x.accountNumber end AS x_account_number,
 case when y.accountNumber is null then '' else y.accountNumber end AS y_account_number,
 case when z.accountNumber is null then '' else z.accountNumber end AS z_account_number,
 case when x.description is null then '' else x.description end AS x_description,
 case when y.description is null then '' else y.description end AS y_description,
 case when z.description is null then '' else z.description end AS z_description,
 case when x.memberId is null then '' else x.memberId end AS x_member_id,
 case when y.memberId is null then '' else y.memberId end AS y_member_id,
 case when z.memberId is null then '' else z.memberId end AS z_member_id,
 case when x.accountType is null then '' else x.accountType end AS x_account_type,
 case when y.accountType is null then '' else y.accountType end AS y_account_type,
 case when z.accountType is null then '' else  z.accountType end AS z_account_type,
 case when x.mainAccountIndicator is null then '' else x.mainAccountIndicator end AS x_main_account_indicator,
 case when y.mainAccountIndicator is null then '' else y.mainAccountIndicator end AS y_main_account_indicator,
 case when z.mainAccountIndicator is null then '' else z.mainAccountIndicator end AS z_main_account_indicator,
 case when x.defaultMainAccount is null then '' else x.defaultMainAccount end AS x_default_main_account,
 case when y.defaultMainAccount is null then '' else y.defaultMainAccount end AS y_default_main_account,
 case when z.defaultMainAccount is null then '' else z.defaultMainAccount end AS z_default_main_account,
 case when x.statementDeliveryBic is null then '' else x.statementDeliveryBic end AS x_statement_delivery_bic, 
 case when y.statementDeliveryBic is null then '' else y.statementDeliveryBic end AS y_statement_delivery_bic,
 case when z.statementDeliveryBic is null then '' else z.statementDeliveryBic end AS z_statement_delivery_bic,
 case when x.accountStatus is null then '' else x.accountStatus end AS x_account_status,
 case when y.accountStatus is null then '' else y.accountStatus end AS y_account_status,
 case when z.accountStatus is null then '' else z.accountStatus end AS z_account_status,
 case when x.currencyCode is null then '' else x.currencyCode end AS x_currency_code,
 case when y.currencyCode is null then '' else y.currencyCode end AS y_currency_code,
 case when z.currencyCode is null then '' else z.currencyCode end AS z_currency_code,
 case when x.endOfDayStatement is null then '' else x.endOfDayStatement end AS x_end_of_day_statement,
 case when y.endOfDayStatement is null then '' else y.endOfDayStatement end AS y_end_of_day_statement,
 case when z.endOfDayStatement is null then '' else z.endOfDayStatement end AS z_end_of_day_statement,
 case when x.payerReference is null then '' else x.payerReference end AS x_payer_reference,
 case when y.payerReference is null then '' else y.payerReference end AS y_payer_reference,
 case when z.payerReference is null then '' else  z.payerReference end AS z_payer_reference,
 case when x.relatedReference is null then '' else x.relatedReference end AS x_related_reference,
 case when y.relatedReference is null then '' else y.relatedReference end AS y_related_reference,
 case when z.relatedReference is null then '' else z.relatedReference end AS z_related_reference,
 case when x.counterpartyId is null then '' else x.counterpartyId end AS x_counterparty_id,
 case when y.counterpartyId is null then '' else y.counterpartyId end AS y_counterparty_id,
 case when z.counterpartyId is null then '' else z.counterpartyId end AS z_counterparty_id,
 case when x.valueDate is null then '' else x.valueDate end AS x_value_date, 
 case when y.valueDate is null then '' else y.valueDate end AS y_value_date,
 case when z.valueDate is null then '' else z.valueDate end AS z_value_date,
 case when x.activationDate is null then '' else x.activationDate end AS x_activation_date,
 case when y.activationDate is null then '' else y.activationDate end AS y_activation_date,
 case when z.activationDate is null then '' else z.activationDate end AS z_activation_date,
 case when x.glCategory is null then '' else x.glCategory end AS x_gl_category,
 case when y.glCategory is null then '' else y.glCategory end AS y_gl_category,
 case when z.glCategory is null then '' else z.glCategory end AS z_gl_category,
 case when x.costCentre is null then '' else x.costCentre end AS x_cost_centre,
 case when y.costCentre is null then '' else y.costCentre end AS y_cost_centre,
 case when z.costCentre is null then '' else  z.costCentre end AS z_cost_centre,
 case when x.glAccountNumber is null then '' else x.glAccountNumber end AS x_gl_account_number,
 case when y.glAccountNumber is null then '' else y.glAccountNumber end AS y_gl_account_number,
 case when z.glAccountNumber is null then '' else z.glAccountNumber end AS z_gl_account_number,
 case when x.statementInterval is null then '' else x.statementInterval end AS x_statement_interval,
 case when y.statementInterval is null then '' else y.statementInterval end AS y_statement_interval,
 case when z.statementInterval is null then '' else z.statementInterval end AS z_statement_interval,
 case when x.action is null then '' else x.action end AS x_action,
 case when y.action is null then '' else y.action end AS y_action,
 case when z.action is null then '' else z.action end AS z_action,
 case when x.status is null then '' else x.status end AS x_status,
 case when y.status is null then '' else y.status end AS y_status,
 case when z.status is null then '' else z.status end AS z_status,
  case when x.modifiedBy is null then '' else x.modifiedBy end AS x_modified_by,
 case when y.modifiedBy is null then '' else y.modifiedBy end AS y_modified_by,
 case when z.modifiedBy is null then '' else z.modifiedBy end AS z_modified_by,
 case when x.modifiedDate is null then '' else x.modifiedDate end AS x_modified_date,
 case when y.modifiedDate is null then '' else y.modifiedDate end AS y_modified_date,
 case when z.modifiedDate is null then '' else z.modifiedDate end AS z_modified_date,
 case when x.approvedBy is null then '' else x.approvedBy end AS x_approved_by,
 case when y.approvedBy is null then '' else y.approvedBy end AS y_approved_by,
 case when z.approvedBy is null then '' else z.approvedBy end AS z_approved_by,
 case when x.approvedDate is null then '' else x.approvedDate end AS x_approved_date,
 case when y.approvedDate is null then '' else y.approvedDate end AS y_approved_date,
 case when z.approvedDate is null then '' else z.approvedDate end AS z_approved_date,
  case when x.createdDate is null then '' else x.createdDate end AS x_created_date,
 case when y.createdDate is null then '' else y.createdDate end AS y_created_date,
 case when z.createdDate is null then '' else z.createdDate end AS z_created_date,
 case when x.effectiveDate is null then '' else x.effectiveDate end AS x_effective_date,
 case when y.effectiveDate is null then '' else y.effectiveDate end AS y_effective_date,
 case when z.effectiveDate is null then '' else z.effectiveDate end AS z_effective_date,
 case when x.approvalRemark is null then '' else x.approvalRemark end AS x_approval_remark,
 case when y.approvalRemark is null then '' else y.approvalRemark end AS y_approval_remark,
 case when z.approvalRemark is null then '' else z.approvalRemark end AS z_approval_remark,
 case when x.workflowStatusId is null then '' else x.workflowStatusId end AS x_workflow_status_id,
 case when y.workflowStatusId is null then '' else y.workflowStatusId end AS y_workflow_status_id,
 case when z.workflowStatusId is null then '' else z.workflowStatusId end AS z_workflow_status_id,
  case when x.complianceCalculation is null then '' else x.complianceCalculation end AS x_compliance_calculation,
 case when y.complianceCalculation is null then '' else y.complianceCalculation end AS y_compliance_calculation,
 case when z.complianceCalculation is null then '' else z.complianceCalculation end AS z_compliance_calculation,
  case when z.remarks is null then case when y.remarks is null then '' else y.remarks end else z.remarks end AS y_remark)
FROM scrips.datamigration.rtgs.model.JpaAccountSource z  left join
 scrips.datamigration.rtgs.model.JpaAccountTemp y on z.id=y.id left join
 scrips.datamigration.rtgs.model.JpaAccount x on y.id=x.id AND y.remarks is null 
ORDER BY z.seq asc]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:138) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:725) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:113) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:366) ~[spring-orm-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.sun.proxy.$Proxy89.createQuery(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:99) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:92) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:331) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:212) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.get(Lazy.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1306) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 17 more
Caused by: org.hibernate.QueryException: could not resolve property: accountId of: scrips.datamigration.rtgs.model.JpaAccount [select new scrips.datamigration.reports.dto.JpaAccountPositionReportDto( case when x.accountId is null then '' else x.accountId end AS x_account_id,
 case when y.accountId is null then '' else y.accountId end AS y_account_id,
 case when z.accountId is null then '' else  z.accountId end AS z_account_id,
 case when x.accountNumber is null then '' else x.accountNumber end AS x_account_number,
 case when y.accountNumber is null then '' else y.accountNumber end AS y_account_number,
 case when z.accountNumber is null then '' else z.accountNumber end AS z_account_number,
 case when x.description is null then '' else x.description end AS x_description,
 case when y.description is null then '' else y.description end AS y_description,
 case when z.description is null then '' else z.description end AS z_description,
 case when x.memberId is null then '' else x.memberId end AS x_member_id,
 case when y.memberId is null then '' else y.memberId end AS y_member_id,
 case when z.memberId is null then '' else z.memberId end AS z_member_id,
 case when x.accountType is null then '' else x.accountType end AS x_account_type,
 case when y.accountType is null then '' else y.accountType end AS y_account_type,
 case when z.accountType is null then '' else  z.accountType end AS z_account_type,
 case when x.mainAccountIndicator is null then '' else x.mainAccountIndicator end AS x_main_account_indicator,
 case when y.mainAccountIndicator is null then '' else y.mainAccountIndicator end AS y_main_account_indicator,
 case when z.mainAccountIndicator is null then '' else z.mainAccountIndicator end AS z_main_account_indicator,
 case when x.defaultMainAccount is null then '' else x.defaultMainAccount end AS x_default_main_account,
 case when y.defaultMainAccount is null then '' else y.defaultMainAccount end AS y_default_main_account,
 case when z.defaultMainAccount is null then '' else z.defaultMainAccount end AS z_default_main_account,
 case when x.statementDeliveryBic is null then '' else x.statementDeliveryBic end AS x_statement_delivery_bic, 
 case when y.statementDeliveryBic is null then '' else y.statementDeliveryBic end AS y_statement_delivery_bic,
 case when z.statementDeliveryBic is null then '' else z.statementDeliveryBic end AS z_statement_delivery_bic,
 case when x.accountStatus is null then '' else x.accountStatus end AS x_account_status,
 case when y.accountStatus is null then '' else y.accountStatus end AS y_account_status,
 case when z.accountStatus is null then '' else z.accountStatus end AS z_account_status,
 case when x.currencyCode is null then '' else x.currencyCode end AS x_currency_code,
 case when y.currencyCode is null then '' else y.currencyCode end AS y_currency_code,
 case when z.currencyCode is null then '' else z.currencyCode end AS z_currency_code,
 case when x.endOfDayStatement is null then '' else x.endOfDayStatement end AS x_end_of_day_statement,
 case when y.endOfDayStatement is null then '' else y.endOfDayStatement end AS y_end_of_day_statement,
 case when z.endOfDayStatement is null then '' else z.endOfDayStatement end AS z_end_of_day_statement,
 case when x.payerReference is null then '' else x.payerReference end AS x_payer_reference,
 case when y.payerReference is null then '' else y.payerReference end AS y_payer_reference,
 case when z.payerReference is null then '' else  z.payerReference end AS z_payer_reference,
 case when x.relatedReference is null then '' else x.relatedReference end AS x_related_reference,
 case when y.relatedReference is null then '' else y.relatedReference end AS y_related_reference,
 case when z.relatedReference is null then '' else z.relatedReference end AS z_related_reference,
 case when x.counterpartyId is null then '' else x.counterpartyId end AS x_counterparty_id,
 case when y.counterpartyId is null then '' else y.counterpartyId end AS y_counterparty_id,
 case when z.counterpartyId is null then '' else z.counterpartyId end AS z_counterparty_id,
 case when x.valueDate is null then '' else x.valueDate end AS x_value_date, 
 case when y.valueDate is null then '' else y.valueDate end AS y_value_date,
 case when z.valueDate is null then '' else z.valueDate end AS z_value_date,
 case when x.activationDate is null then '' else x.activationDate end AS x_activation_date,
 case when y.activationDate is null then '' else y.activationDate end AS y_activation_date,
 case when z.activationDate is null then '' else z.activationDate end AS z_activation_date,
 case when x.glCategory is null then '' else x.glCategory end AS x_gl_category,
 case when y.glCategory is null then '' else y.glCategory end AS y_gl_category,
 case when z.glCategory is null then '' else z.glCategory end AS z_gl_category,
 case when x.costCentre is null then '' else x.costCentre end AS x_cost_centre,
 case when y.costCentre is null then '' else y.costCentre end AS y_cost_centre,
 case when z.costCentre is null then '' else  z.costCentre end AS z_cost_centre,
 case when x.glAccountNumber is null then '' else x.glAccountNumber end AS x_gl_account_number,
 case when y.glAccountNumber is null then '' else y.glAccountNumber end AS y_gl_account_number,
 case when z.glAccountNumber is null then '' else z.glAccountNumber end AS z_gl_account_number,
 case when x.statementInterval is null then '' else x.statementInterval end AS x_statement_interval,
 case when y.statementInterval is null then '' else y.statementInterval end AS y_statement_interval,
 case when z.statementInterval is null then '' else z.statementInterval end AS z_statement_interval,
 case when x.action is null then '' else x.action end AS x_action,
 case when y.action is null then '' else y.action end AS y_action,
 case when z.action is null then '' else z.action end AS z_action,
 case when x.status is null then '' else x.status end AS x_status,
 case when y.status is null then '' else y.status end AS y_status,
 case when z.status is null then '' else z.status end AS z_status,
  case when x.modifiedBy is null then '' else x.modifiedBy end AS x_modified_by,
 case when y.modifiedBy is null then '' else y.modifiedBy end AS y_modified_by,
 case when z.modifiedBy is null then '' else z.modifiedBy end AS z_modified_by,
 case when x.modifiedDate is null then '' else x.modifiedDate end AS x_modified_date,
 case when y.modifiedDate is null then '' else y.modifiedDate end AS y_modified_date,
 case when z.modifiedDate is null then '' else z.modifiedDate end AS z_modified_date,
 case when x.approvedBy is null then '' else x.approvedBy end AS x_approved_by,
 case when y.approvedBy is null then '' else y.approvedBy end AS y_approved_by,
 case when z.approvedBy is null then '' else z.approvedBy end AS z_approved_by,
 case when x.approvedDate is null then '' else x.approvedDate end AS x_approved_date,
 case when y.approvedDate is null then '' else y.approvedDate end AS y_approved_date,
 case when z.approvedDate is null then '' else z.approvedDate end AS z_approved_date,
  case when x.createdDate is null then '' else x.createdDate end AS x_created_date,
 case when y.createdDate is null then '' else y.createdDate end AS y_created_date,
 case when z.createdDate is null then '' else z.createdDate end AS z_created_date,
 case when x.effectiveDate is null then '' else x.effectiveDate end AS x_effective_date,
 case when y.effectiveDate is null then '' else y.effectiveDate end AS y_effective_date,
 case when z.effectiveDate is null then '' else z.effectiveDate end AS z_effective_date,
 case when x.approvalRemark is null then '' else x.approvalRemark end AS x_approval_remark,
 case when y.approvalRemark is null then '' else y.approvalRemark end AS y_approval_remark,
 case when z.approvalRemark is null then '' else z.approvalRemark end AS z_approval_remark,
 case when x.workflowStatusId is null then '' else x.workflowStatusId end AS x_workflow_status_id,
 case when y.workflowStatusId is null then '' else y.workflowStatusId end AS y_workflow_status_id,
 case when z.workflowStatusId is null then '' else z.workflowStatusId end AS z_workflow_status_id,
  case when x.complianceCalculation is null then '' else x.complianceCalculation end AS x_compliance_calculation,
 case when y.complianceCalculation is null then '' else y.complianceCalculation end AS y_compliance_calculation,
 case when z.complianceCalculation is null then '' else z.complianceCalculation end AS z_compliance_calculation,
  case when z.remarks is null then case when y.remarks is null then '' else y.remarks end else z.remarks end AS y_remark)
FROM scrips.datamigration.rtgs.model.JpaAccountSource z  left join
 scrips.datamigration.rtgs.model.JpaAccountTemp y on z.id=y.id left join
 scrips.datamigration.rtgs.model.JpaAccount x on y.id=x.id AND y.remarks is null 
ORDER BY z.seq asc]
	at org.hibernate.QueryException.generateQueryException(QueryException.java:120) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.QueryException.wrapWithQueryString(QueryException.java:103) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:220) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:155) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:604) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:716) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:113) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:366) ~[spring-orm-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.sun.proxy.$Proxy89.createQuery(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:99) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:92) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:331) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:212) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.get(Lazy.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1306) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 17 more
Caused by: org.hibernate.QueryException: could not resolve property: accountId of: scrips.datamigration.rtgs.model.JpaAccount
	at org.hibernate.persister.entity.AbstractPropertyMapping.propertyException(AbstractPropertyMapping.java:73) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.persister.entity.AbstractPropertyMapping.toType(AbstractPropertyMapping.java:67) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.toType(AbstractEntityPersister.java:2044) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.tree.FromElementType.getPropertyType(FromElementType.java:412) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.tree.FromElement.getPropertyType(FromElement.java:520) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:693) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.tree.DotNode.prepareLhs(DotNode.java:268) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:208) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:1053) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1303) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4771) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4599) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2161) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.searchedCaseWhenClause(HqlSqlBaseWalker.java:5534) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.searchedCaseExpression(HqlSqlBaseWalker.java:5316) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.caseExpr(HqlSqlBaseWalker.java:5192) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.arithmeticExpr(HqlSqlBaseWalker.java:3419) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectExpr(HqlSqlBaseWalker.java:2449) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.aliasedSelectExpr(HqlSqlBaseWalker.java:2534) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.constructor(HqlSqlBaseWalker.java:2686) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectExpr(HqlSqlBaseWalker.java:2386) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectExprList(HqlSqlBaseWalker.java:2256) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectClause(HqlSqlBaseWalker.java:1518) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:325) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:273) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:272) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:155) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:604) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:716) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:113) ~[hibernate-core-5.4.15.Final.jar:5.4.15.Final]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:366) ~[spring-orm-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.sun.proxy.$Proxy89.createQuery(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:99) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:92) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:84) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:331) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:212) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.util.Lazy.get(Lazy.java:94) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300) ~[spring-data-commons-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1306) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 17 more
