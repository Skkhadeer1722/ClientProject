status = error
name = RollingFile
 
filters = threshold
 
filter.threshold.type = ThresholdFilter
filter.threshold.level = debug

#property.basePath = ./logs
appenders = rolling,console
 
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern =  %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36}:%L - %msg%n

 
 
 # RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName= ${sys:logfilepath}/dataMigration_app_${date:yyyy-MM-dd_hh-mm-ss}.log
appender.rolling.filePattern= ${sys:logfilepath}/dataMigration_app_${date:yyyy-MM-dd_hh-mm-ss}.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36}:%L - %msg%n
appender.rolling.policies.type = Policies
 
appender.rolling.policies.startup.type = OnStartupTriggeringPolicy
appender.rolling.policies.startup.minSize=1
rootLogger.level = info
rootLogger.appenderRef.stdout.ref = STDOUT
rootLogger.appenderRef.rolling.ref= fileLogger

logger.hibernate.name=org.hibernate.SQL
logger.hibernate.level=debug